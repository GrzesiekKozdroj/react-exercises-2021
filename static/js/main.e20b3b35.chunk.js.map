{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","onAdd","title","useState","setColor","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","date","Tasks","tasks","length","map","AddTask","setText","time","setTime","setReminder","onSubmit","e","preventDefault","Math","floor","random","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e20b3b35.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nconst Button = ({color, text, onClick}) => {\n\n    return (\n        <button \n            className='btn' \n            style={{backgroundColor:color}}\n            onClick = {onClick}\n        >\n            {text}\n        </button>\n    )\n}\nButton.defaultProps = {\n    color: 'grey',\n    text: 'afk'\n}\nButton.propTypes = {\n    text:PropTypes.string,\n    color:PropTypes.string,\n    onClick:PropTypes.func\n}\nexport default Button\n","\nimport { useState } from 'react'\nimport propTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({onAdd, title}) => {\n    const [color, setColor] = useState(false)\n    const changeColor = ()=> setColor(!color)\n    const onClick = () => {\n        changeColor()\n        onAdd()\n    }\n\n\n    return (\n        <header className=\"header\">\n            <h1>{ title }</h1>\n            <Button \n                color={!color?'green':'red'} \n                text={!color?'Add':'Close'} \n                onClick={onClick} \n            />\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title:\"Task Manager\"\n}\nHeader.propTypes = {\n    title: propTypes.string\n}\n\nexport default Header\n","\nimport { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className = {`task ${task.reminder ? \" reminder\":\"\"}`} onDoubleClick={()=>onToggle(task.id)}>\n            <h3 key = {task.id}>\n                {task.text}\n                <FaTimes \n                    style={{color:'red', cursor:'pointer'}}\n                    onClick = {()=>{onDelete(task.id)}}\n                />\n            </h3>\n            <p>\n                {task.date}\n            </p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n\n    return (\n        <>\n          {\n            tasks.length ?\n                tasks.map((task)=>( <Task key = {task.id} task={task} onDelete={onDelete} onToggle={onToggle}/> ))\n            : \n                <p>no tasks</p>\n          }\n        </>\n    )\n\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [time, setTime] = useState('')\n    const [reminder, setReminder] = useState(false)\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if(!text){\n            alert('no task')\n            return\n        } else {\n            onAdd({text, date:time, reminder, id:Math.floor( Math.random () * (10000 - 0 + 1)) + 0})\n            setTime('')\n            setText('')\n            setReminder(false)\n        }\n    }\n    return (\n        <form \n            className='add-form'\n            onSubmit={onSubmit}\n        >\n\n            <div className=\"form-control\">\n                <label>Task</label>\n                <input \n                    type=\"text\" \n                    placeholder=\"Add Task\" \n                    value={text} \n                    onChange={ e=>setText(e.target.value) }\n                />\n            </div>\n\n            <div className=\"form-control\">\n                <label>Time</label>\n                <input \n                    type=\"text\" \n                    placeholder=\"Add Time\" \n                    value={time}\n                    onChange={ e=>setTime(e.target.value) }\n                />\n            </div>\n\n            <div className=\"form-control form-control-check\">\n                <label>Set Reminder</label>\n                <input \n                    type=\"checkbox\" \n                    checked={reminder}\n                    value={reminder}\n                    onChange={ e=>setReminder(e.currentTarget.checked) }\n                />\n            </div>\n            <input \n                type='submit' \n                className='btn btn-block' \n                style={{backgroundColor:!text?'black':'darkgreen'}}\n                value='Save Task'\n            />\n\n        </form>\n    )\n}\n\nexport default AddTask\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [ tasks, setTasks ] = useState([\n      {\n          id:1,\n          text:'play games',\n          date:'any moment alone',\n          reminder:false,\n      },\n      {\n          id:2,\n          text:'learn coding/code',\n          date:'any moments when stoned',\n          reminder:true,\n      },\n      {\n          id:3,\n          text:'paint miniatures',\n          date:'whenever in peace',\n          reminder:true,\n      },\n      {\n          id:4,\n          text:'exercise',\n          date:'while watching tv',\n          reminder:true,\n      }\n  ])\n\n  const deleteTask = id => setTasks(  tasks.filter( task => task.id !== id ))\n  const addTask = task => setTasks([...tasks, task])\n  const toggleReminder = id => setTasks( tasks.map ( task => task.id === id ? { ...task, reminder: !task.reminder } : task ))\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={()=>setShowAddTask(!showAddTask)}/>\n      { showAddTask && <AddTask onAdd={addTask} /> }\n      <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n    </div>\n  );\n}\n// class App extends React.Component {\n\n//   render(){\n//       return (\n//             <div className=\"container\">\n//               <Header />\n//             </div>\n//       )\n//     }\n// }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}